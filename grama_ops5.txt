  OPS5-> ( orden ) Rorden
  orden-> literalize id Q0 atributo_escalar
  orden-> vector_attribute vector_name
  Rorden-> ( orden ) Rorden
  Rorden-> 
  atributo_escalar-> id Q2 Ratributo_escalar
  Ratributo_escalar-> id Q2 Ratributo_escalar
  Ratributo_escalar-> 
  vector_name-> id Rvector_name
  Rvector_name-> id Rvector_name
  Rvector_name-> 
  orden-> startup emt
  emt-> ( make id Q1 pares_atrib_valor ) Q11 Remt
  Remt-> ( make id Q1 pares_atrib_valor ) Q11 Remt
  Remt-> 
  pares_atrib_valor-> ^ id M E Q3 pares_atrib_valor
  pares_atrib_valor-> 
  orden-> p id Q4 cond Q8 -> Mponer_marca_lista acc Racc
  cond-> { variable M ( id Mmarca pares_atrib_cond ) } Q5 Rcond
  cond-> negar_cond ( id Mmarca pares_atrib_cond ) Q6 Rcond
  Rcond-> { variable M ( id Mmarca pares_atrib_cond ) } Q5 Rcond
  Rcond-> negar_cond ( id Mmarca pares_atrib_cond ) Q6 Rcond
  Rcond-> 
  negar_cond-> - M
  negar_cond-> menosu M
  negar_cond-> Q9
  pares_atrib_cond-> ^ id M elemento_condicion pares_atrib_cond
  pares_atrib_cond-> 
  elemento_condicion-> Q9 E
  elemento_condicion-> pdcha_cond
  elemento_condicion-> conjuncion
  elemento_condicion-> disyuncion
  pdcha_cond-> op_rel M E
  conjuncion-> { Mponer_marca_conj elemento_condicion Relemento_cond }
  disyuncion-> doble_angulo_ab Mponer_marca_dis elemento_condicion Relemento_cond doble_angulo_ce
  Relemento_cond-> elemento_condicion Relemento_cond
  Relemento_cond-> 
  acc-> ( make F Mponer_marca_lista pares_atrib_valor )
  acc-> ( modify F Mponer_marca_lista pares_atrib_valor )
  acc-> ( remove F )
  acc-> ( bind F E )
  acc-> ( write Mponer_marca_lista texto )
  acc-> ( halt )
  Racc-> acc Racc
  Racc-> 
  texto-> elem_write texto
  texto-> variable M texto
  texto-> 
  elem_write-> ( rjust num M )
  elem_write-> ( tabto num M )
  elem_write-> ( crlf )
  E-> ( compute E )
  E-> ( acceptline F )
  E-> E + T
  E-> E - T--, 'RESTAR
  E-> T
  T-> T * F--, 'MULTIPLICAR
  T-> T / F--, 'DIVIDIR
  T-> F
  F-> menosu F--, 'CAMBIAR_SIGNO
  F -> ( E )
  F-> variable
  F-> num
  F-> cadena
  F-> id
  F-> nil
  M -> 
  Mmarca ->                                                                                   -- inserta en la pila un nombre
  Q0 -> 
  Q1 -> 
  Q2 -> 
  Q3 -> 
  Q4 -> 
  Q5 -> 
  Q6 -> 
  Q8 -> 
  Q9 -> 
  Q11 -> 
  Mponer_marca_conj -> 
  Mponer_marca_dis -> 
  Mponer_marca_lista -> 
  OPS5Prima -> OPS5                                                                                                      -- cuidar que esta regla sea la ultima

  
(literalize student
        name
        id
        maj-code)

(literalize majors
        major-code
        major-name)

(startup
	(make student ^name Laura ^id 2233 ^maj-code 10)
	(make student ^name Laura ^id 1234 ^maj-code 11)
	(make student ^name John ^id 4321 ^maj-code 11)
	(make student ^name Heather ^id 3214 ^maj-code 10)
	(make student ^name Becca ^id 9876 ^maj-code 10)
	(make student ^name Kathy ^id 6543 ^maj-code 11)
	(make majors ^major-code 10 ^major-name biology)
	(make majors ^major-code 11 ^major-name chemistry)
)

(p select-major
        (student ^name <name> ^maj-code <mc> ^id <id>)
        (majors ^major-code <mc> ^major-name <major>)
      - (student ^maj-code < <mc>)
-->
        (write <name> (tabto 20) <major> (tabto 30) <id> (crlf))
        (remove 1))